Plugins:
- prettify html
- boiler html
-gitGutter
-emmet
-docBlockr (Documentar el código)

Para aprender Markdown:
https://stackedit.io

Para la parte visual:
www.dribbble.com (gráfico en jpg)
www.codepen.com (implementado en html,...) --IMPORTANTE
www.zurb.com (plantilla para página web)

Para ver transiciones:
http://cubic-bezier.com


Para saber en qué navegadores puedes utilizar una propiedad o tecnologías:
www.caniuse.com

Animaciones:
https://daneden.github.io/animate.css/

Flexbox:
https://css-tricks.com/snippets/css/a-guide-to-flexbox/

Centrando con flexbox:
https://css-tricks.com/centering-css-complete-guide/

Referencias de css:
http://cssreference.io/

Generar triángulos en css:
http://apps.eky.hk/css-triangle-generator/

Plantilla cv:
http://codepen.io/anthanh/pen/rygyPQ

//JAVASCRIPT

Guía de estilo para js:
https://github.com/airbnb/javascript

Videoconferencia online:
appear.in



//////////////////Ejemplo de contexto en funciones////////////////////
var obj = {
    nombre: 'Pepito',
    saludo: function() {
        return 'Hola, ' + this.nombre + '!';
    }
};


obj.nombre;
obj.saludo;
obj["saludo"](); //Devuelve "Hola, Pepito"
var fn = obj["saludo"]; //Devuelve "Hola, undefined"
fn();

/*
El contexto de una función se define en tiempo de ejecución.
Al llamar a fn() no digo cual es el contexto de la función, por lo que utiliza el contexto global, donde nombre no tiene ningún valor.

Se podría solucionar con fn.call(obj)-> Al utilizar call le indico el contexto en el que debe ejecutarse la función
 */


 //////////////////////////////////////////////////////////////////////

Añadimos esto al principio de los archivos js para que no haga cosas raras como subir las declaraciones de variables.
 'use strict'


Requisitos:
-Mucho html
-grid y flexbox
-css: animacion y transicio
-js: 2 opciones con checkbox en formulario y que según pulses una u otra aparezcan opciones en el formulario.
-validar formulario con js




Hacer un div con los 6 elementos flex, cada elemento el 33% y con wrap
